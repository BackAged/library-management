version: "3"
services:
  api-gateway:
    container_name: library-management-api-gateway
    build: 
        dockerfile: Dockerfile
        context: ./api-gateway
    depends_on: 
        - mongo
    ports:
      - "3000:8000"
    environment: 
      - USER_AUTH_URL=user_auth:3001,
      - BOOK_URL=book:3002,
      - LIBRARY_URL=library:3003,
      - APPLICATION_SERVER_PORT=8000
      - APP_FORCE_SHUTDOWN_SECOND=30

  user-auth:
    container_name: library-management-user-auth
    build: 
        dockerfile: Dockerfile
        context: ./user-auth
    depends_on: 
        - mongo
    ports:
      - "3001:8000"
    environment: 
      - MONGO_HOST=mongodb://mongo:27017
      - MONGO_DB=user_auth
      - APPLICATION_SERVER_PORT=8000
      - APP_FORCE_SHUTDOWN_SECOND=30

  book:
    container_name: library-management-book
    build: 
        dockerfile: Dockerfile
        context: ./book
    depends_on: 
        - mongo
    ports:
      - "3002:8000"
    command: serve-rest -c "/etc/config.yaml"
    volumes:
      - ./book/config.yaml:/etc/config.yaml

  library:
    container_name: library-management-library
    build: 
        dockerfile: Dockerfile
        context: ./library
    depends_on: 
        - mongo
    ports:
      - "3003:8000"
    command: serve-rest -c "/etc/config.yaml"
    volumes:
      - ./library/config.yaml:/etc/config.yaml
  
  # mongo Server
  mongo:
    container_name: library-management-mongo
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./data:/data/db

  # redis server
  redis:
    container_name: library-management-redis
    image: "redis:alpine"
    restart: always
    ports: 
      - "6379:6379"